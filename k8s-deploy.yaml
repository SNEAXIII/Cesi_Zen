apiVersion: v1
kind: Namespace
metadata:
  name: cesi-zen
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: db-env
  namespace: cesi-zen
data:
  # contenu de ton db.env
  MYSQL_ROOT_PASSWORD: root
  MYSQL_DATABASE: mydb
  MYSQL_USER: user
  MYSQL_PASSWORD: pass
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mariadb
  namespace: cesi-zen
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mariadb
  template:
    metadata:
      labels:
        app: mariadb
    spec:
      containers:
        - name: mariadb
          image: mariadb
          ports:
            - containerPort: 3306
          envFrom:
            - configMapRef:
                name: db-env
          volumeMounts:
            - name: mariadb-data
              mountPath: /var/lib/mysql
      volumes:
        - name: mariadb-data
          emptyDir: {}   # ⚠️ pour dev, pas persistant
---
apiVersion: v1
kind: Service
metadata:
  name: mariadb
  namespace: cesi-zen
spec:
  ports:
    - port: 3306
      targetPort: 3306
  selector:
    app: mariadb
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: phpmyadmin
  namespace: cesi-zen
spec:
  replicas: 1
  selector:
    matchLabels:
      app: phpmyadmin
  template:
    metadata:
      labels:
        app: phpmyadmin
    spec:
      containers:
        - name: phpmyadmin
          image: phpmyadmin/phpmyadmin
          ports:
            - containerPort: 80
          env:
            - name: PMA_HOST
              value: "mariadb"
            - name: PMA_PORT
              value: "3306"
---
apiVersion: v1
kind: Service
metadata:
  name: phpmyadmin
  namespace: cesi-zen
spec:
  type: NodePort
  ports:
    - port: 80
      nodePort: 30080
      targetPort: 80
  selector:
    app: phpmyadmin
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: api
  namespace: cesi-zen
spec:
  replicas: 1
  selector:
    matchLabels:
      app: api
  template:
    metadata:
      labels:
        app: api
    spec:
      containers:
        - name: api
          image: sneaxiii/cesi-zen-api:latest
          ports:
            - containerPort: 8000
          envFrom:
            - configMapRef:
                name: api-env   # ⚠️ à créer comme db-env
          command: ["sh", "run.sh"]
---
apiVersion: v1
kind: Service
metadata:
  name: api
  namespace: cesi-zen
spec:
  type: NodePort
  ports:
    - port: 8000
      nodePort: 30001
      targetPort: 8000
  selector:
    app: api
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: front
  namespace: cesi-zen
spec:
  replicas: 1
  selector:
    matchLabels:
      app: front
  template:
    metadata:
      labels:
        app: front
    spec:
      containers:
        - name: front
          image: sneaxiii/cesi-zen-front:latest
          ports:
            - containerPort: 3000
          envFrom:
            - configMapRef:
                name: front-env   # ⚠️ idem
          command: ["sh", "run.sh"]
---
apiVersion: v1
kind: Service
metadata:
  name: front
  namespace: cesi-zen
spec:
  type: NodePort
  ports:
    - port: 3000
      nodePort: 30002
      targetPort: 3000
  selector:
    app: front
