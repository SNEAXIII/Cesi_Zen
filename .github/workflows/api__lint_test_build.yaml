name: CI Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
permissions:
  contents: read
env:
  WORKDIR: ./api
  PYTHON_VERSION: '3.12'
jobs:
#  lint-test:
#    name: Lint & Test
#    runs-on: ubuntu-latest
#    steps:
#      - name: Checkout repository
#        uses: actions/checkout@v4
#      - name: Set up Python ${{ env.PYTHON_VERSION }}
#        uses: actions/setup-python@v3
#        with:
#          python-version: ${{ env.PYTHON_VERSION }}
#      - name: Cache pip
#        uses: actions/cache@v3
#        with:
#          path: ~/.cache/pip
#          key: ${{ runner.os }}-pip-${{ hashFiles('api/requirements_dev.txt') }}
#          restore-keys: |
#            ${{ runner.os }}-pip-
#      - name: Install dev dependencies
#        working-directory: ${{ env.WORKDIR }}
#        run: |
#          python -m pip install --upgrade pip
#          pip install -r requirements_dev.txt
#      - name: Setup environment variables
#        working-directory: ${{ env.WORKDIR }}
#        run: mv api.env.example api.env
#      - name: Run Ruff linter
#        uses: astral-sh/ruff-action@v3
#        with:
#          src: ${{ env.WORKDIR }}
#      - name: Run unit tests
#        working-directory: ${{ env.WORKDIR }}
#        run: pytest tests/unit
#      - name: Run integration tests
#        working-directory: ${{ env.WORKDIR }}
#        run: pytest tests/integration
  docker:
    environment: Api
    name: Docker Build & Push
    runs-on: ubuntu-latest
#    needs: lint-test
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: ./api
          file: ./api/api.Dockerfile
          push: true
          tags: ${{ vars.DOCKERHUB_USERNAME }}/api:latest